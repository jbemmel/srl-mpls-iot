#
# SRL MPLS IOT lab featuring SROS and VMX
#
name: mpls-iot-lab

topology:
  defaults:
    config:
      vars:
        overlay_as: 65555 # 32-bit
#----------------------------------------------------#
  kinds:
    srl:
      image: srl/netbox-agent:latest
      extras:
        srl-agents:
        - ../srl-self-organizing/auto-config-agent.yml
        - ../srl-netbox-agent/srl-netbox-agent.yml
      # startup-config: configs/srl-auto.cfg.json
      startup-config: configs/delta-auto-config.cmd
      # binds:

    vr-sros:
      image: vrnetlab/vr-sros:21.10.R1
      license: ~/sros/SR_OS_VSR_license.txt # now also in qcow2
      binds:
      - scripts/pysros-demo.py:/tftpboot/pysros-demo.py
      - scripts/pysros-populate-netbox.py:/tftpboot/pysros-populate-netbox.py

    vr-vmx:
      image: vrnetlab/vr-vmx:21.1R1.11

    linux:
      image: frr-with-lldp:latest

  nodes:
  #-----------------------------------------------------#
    core1:
      kind: vr-sros
      group: mpls-core
      type: sr-1s
      # type: "cpu=2 ram=4 max_nics=6 chassis=sr-2s slot=A card=xcm-1s mda/1=s18-100gb-qsfp28"
      # type: "cpu=2 ram=6 max_nics=8 slot=A chassis=sr-2s sfm=sfm-2s card=xcm-2s xiom/x1=iom-s-3.0t mda/x1/1=ms8-100gb-sfpdd+2-100gb-qsfp28"
      # type: "cpu=2 ram=6 max_nics=18 slot=A chassis=sr-2s sfm=sfm-2s card=xcm-2s mda/1=s18-100gb-qsfp28"
      config:
        vars:
          system_ip: 1.1.1.1
          as: 65029

    core2:
      kind: vr-sros
      group: mpls-core
      type: sr-1s
      config:
        vars:
          system_ip: 1.1.1.2
          as: 65029
  #-----------------------------------------------------#
    dcgw1.dc1:
      kind: vr-sros
      group: dc
      type: sr-1s
      config:
        vars:
          system_ip: 2.1.2.1
          as: 65030
    #-----------------------------------------------------#
    dcgw2.dc1:
      kind: vr-sros
      group: dc
      type: sr-1s
      config:
        vars:
          system_ip: 2.1.2.2
          as: 65030
    #-----------------------------------------------------#
    spine1.dc1:
      kind: srl
      type: ixr6
      group: dc
      config:
        vars:
          system_ip: 2.1.1.1
          as: 65031

    leaf1.dc1:
      kind: srl
      # Need IXR D2 or D3 for EVPN/VXLAN support
      type: ixrd2 # See https://www.nokia.com/networks/products/7250-interconnect-router/
      group: dc
      config:
        vars:
          system_ip: 2.1.2.1
          as: 65032

    leaf2.dc1:
      kind: srl
      # Need IXR D2 or D3 for EVPN/VXLAN support
      type: ixrd2 # See https://www.nokia.com/networks/products/7250-interconnect-router/
      group: dc
      config:
        vars:
          system_ip: 2.1.2.2
          as: 65033
    #-----------------------------------------------------#
    vmx1.pop1:
      kind: vr-vmx
      group: pop1
      config:
        vars:
          system_ip: 3.1.2.1
          as: 65042

    sros1.pop2:
      kind: vr-sros
      group: pop2
      type: sr-1s
      config:
        vars:
          system_ip: 4.1.2.1
          as: 65041

    # Game servers
    h1.dc1: { kind: linux, group: game-servers, binds: [ configs/h1/frr.conf:/etc/frr/frr.conf ] }
    h2.dc1: { kind: linux, group: game-servers, binds: [ configs/h2/frr.conf:/etc/frr/frr.conf ] }

    # Gamers
    h3.pop1: { kind: linux, group: gamers, binds: [ configs/h3/frr.conf:/etc/frr/frr.conf ] }
    h4.pop1: { kind: linux, group: gamers, binds: [ configs/h4/frr.conf:/etc/frr/frr.conf ] }
    h5.pop2: { kind: linux, group: gamers, binds: [ configs/h5/frr.conf:/etc/frr/frr.conf ] }
    h6.pop2: { kind: linux, group: gamers, binds: [ configs/h6/frr.conf:/etc/frr/frr.conf ] }

    flow-collector:
      kind: linux
      image: cloudflare/goflow:latest
      ports:
      - 2056:2056/udp  # Type=NetFlowLegacy
      - 6343:6343/udp  # Type=sFlow
      - 2055:2055/udp  # NetFlow/IPFIX
      - 8080:8080/tcp  # Metrics available for Prometheus scraping, host:container
                       # default under '/metrics'
      cmd: -kafka=false -loglevel=debug
      mgmt_ipv4: 172.20.20.100

  links:
    # Everything connected to core nodes
    - endpoints: ["core1:eth1", "dcgw1.dc1:eth1"]
    - endpoints: ["core1:eth2", "dcgw2.dc1:eth1"]
    - endpoints: ["core1:eth3", "vmx1.pop1:eth1"]
    - endpoints: ["core1:eth4", "sros1.pop2:eth1"]
    - endpoints: ["core2:eth1", "dcgw1.dc1:eth2"]
    - endpoints: ["core2:eth2", "dcgw2.dc1:eth2"]
    - endpoints: ["core2:eth3", "vmx1.pop1:eth2"]
    - endpoints: ["core2:eth4", "sros1.pop2:eth2"]
    - endpoints: ["core1:eth5", "core2:eth5"]

    # SRL connected to each DCGW
    - endpoints: ["spine1.dc1:e1-1", "dcgw1.dc1:eth3"]
    - endpoints: ["spine1.dc1:e1-2", "dcgw2.dc1:eth3"]

    # A game server host connected to each SRL leaf on e1-2
    - endpoints: ["spine1.dc1:e1-3", "leaf1.dc1:e1-1"]
    - endpoints: ["spine1.dc1:e1-4", "leaf2.dc1:e1-1"]
    - endpoints: ["leaf1.dc1:e1-2", "h1.dc1:eth1"]
    - endpoints: ["leaf2.dc1:e1-2", "h2.dc1:eth1"]

    # Gamers connected in PoPs
    - endpoints: ["vmx1.pop1:eth3", "h3.pop1:eth1"]
    - endpoints: ["vmx1.pop1:eth4", "h4.pop1:eth1"]

    - endpoints: ["sros1.pop2:eth3", "h5.pop2:eth1"]
    - endpoints: ["sros1.pop2:eth4", "h6.pop2:eth1"]

    # Connect to sFlow connector via spine1 e1-5
    - endpoints: ["spine1.dc1:e1-5","mgmt-net:spine1-e1-5"] # bridged to mgmt
      vars:
        port: [ethernet-1/4,None]
        clab_link_ip: 172.20.20.99/24
