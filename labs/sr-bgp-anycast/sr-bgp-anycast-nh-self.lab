#
# Container lab to test BGP Anycast using only SRL nodes
#
# Triggered by:
# - https://blog.ipspace.net/2021/11/anycast-mpls.html
# - BGP Add Path: https://blog.ipspace.net/2021/12/bgp-multipath-addpath.html
#
# Configure: sudo containerlab config -t ./sr-bgp-anycast-nh-self.lab -l sr-bgp-anycast -p .
#
name: sr-bgp-anycast

topology:
  defaults:
    config:
      vars:
        overlay_as: 65000
        anycast_as: 64999 # Must be different
        anycast_ip: 7.7.7.7
        next_hop_self: false

#----------------------------------------------------#
  kinds:
    # Only 1 kind of nodes, no license file required
    srl:
      type: ixrd2
      group: SRL
      # image: ghcr.io/nokia/srlinux
      image: srl/anycast-agent:latest
      extras:
        srl-agents: [ ../../../ndk-dev-environment/srl-anycast-agent.yml ]

#-----------------------------------------------------#
  nodes:
    rr:
      kind: srl
      group: RR
      config:
        vars:
          system_ip: 10.0.0.1
          cluster_id: 10.10.10.10
          as: 65001

    a: # Goal: should get C->Y route
      kind: srl
      config:
        vars:
          system_ip: 10.0.0.2
          as: 65002

    b:
      kind: srl
      config:
        vars:
          system_ip: 10.0.0.3
          as: 65003

    c:
      type: ixr6 # For MPLS support
      kind: srl # was: vr-sros
      config:
        vars:
          system_ip: 10.0.0.4
          as: 65004
          peer_external: true
          next_hop_self: true # To make external route acceptable to RR

    d:
      type: ixr6 # For MPLS support
      kind: srl # was: vr-sros
      config:
        vars:
          system_ip: 10.0.0.5
          as: 65005
          peer_external: true
          next_hop_self: true

    m: # Goal: should get ECMP routes via both C and D
      kind: srl
      config:
        vars:
          system_ip: 10.0.0.6
          as: 65006

    y:
      kind: srl
      group: external
      config:
        vars:
          system_ip: 10.0.0.7
          overlay_as: 0   # eBGP with edge nodes only
          as: 65100
          static_route_prefix: 10.42.42.0/24

  links:
  - endpoints: ["a:e1-1", "b:e1-1"]
    vars:
      port: [ethernet-1/1,ethernet-1/1]
      clab_link_ip: 172.16.0.0/31
  - endpoints: ["a:e1-2", "c:e1-1"]
    vars:
      port: [ethernet-1/2,ethernet-1/1]
      clab_link_ip: 172.16.0.2/31
  - endpoints: ["b:e1-2", "d:e1-1"]
    vars:
      port: [ethernet-1/2,ethernet-1/1]
      clab_link_ip: 172.16.0.4/31
  - endpoints: ["c:e1-2", "d:e1-2"]
    vars:
      port: [ethernet-1/2,ethernet-1/2]
      clab_link_ip: 172.16.0.6/31

# RR links
  - endpoints: ["b:e1-3", "rr:e1-1"]
    vars:
      port: [ethernet-1/3,ethernet-1/1]
      clab_link_ip: 172.16.0.8/31
  - endpoints: ["d:e1-3", "rr:e1-2"]
    vars:
      port: [ethernet-1/3,ethernet-1/2]
      clab_link_ip: 172.16.0.10/31

# M links
  - endpoints: ["c:e1-4", "m:e1-1"]
    vars:
      port: [ethernet-1/4,ethernet-1/1]
      clab_link_ip: 172.16.0.12/31
  - endpoints: ["d:e1-4", "m:e1-2"]
    vars:
      port: [ethernet-1/4,ethernet-1/2]
      clab_link_ip: 172.16.0.14/31

# Y links (eBGP to external world)
  - endpoints: ["c:e1-5", "y:e1-1"]
    vars:
      port: [ethernet-1/5,ethernet-1/1]
      clab_link_ip: 172.16.0.16/31
  - endpoints: ["d:e1-5", "y:e1-2"]
    vars:
      port: [ethernet-1/5,ethernet-1/2]
      clab_link_ip: 172.16.0.18/31

# Temporary solution until 21.11.R1 with eBGP multihop becomes available
  - endpoints: ["a:e1-3", "rr:e1-3"]
    vars:
      port: [ethernet-1/3,ethernet-1/3]
      clab_link_ip: 172.16.0.20/31
  - endpoints: ["c:e1-3", "rr:e1-4"]
    vars:
      port: [ethernet-1/3,ethernet-1/4]
      clab_link_ip: 172.16.0.22/31
  - endpoints: ["m:e1-3", "rr:e1-5"]
    vars:
      port: [ethernet-1/3,ethernet-1/5]
      clab_link_ip: 172.16.0.24/31
