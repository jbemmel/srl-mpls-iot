{{/* Configure P-to-P interfaces */}}
/system gnmi-server unix-socket admin-state enable
{{ range $name, $link := .clab_links }}
{{ if $link.port }}
/ interface {{ $link.port }} subinterface 0 ipv4 address {{ $link.clab_link_ip }}
/ interface {{ $link.port }} subinterface 0 description {{ $link.clab_link_name }}
/ network-instance default interface {{ $link.port }}.0
{{- end }}
{{- end }}

{{/* Configure system interface */}}
/ interface system0 admin-state enable subinterface 0 ipv4 address {{ .system_ip }}/32
/ network-instance default type default
/ network-instance default interface system0.0

{{/* policy to allow system ip and neighbor loopbacks */}}
/ routing-policy prefix-set system_ips prefix {{ .system_ip }}/32 mask-length-range exact
/ routing-policy prefix-set system_ips prefix {{ .anycast_ip }}/32 mask-length-range exact
/ routing-policy prefix-set system_ips prefix 10.0.0.0/24 mask-length-range 32..32
/ routing-policy policy underlay_import statement 10 match prefix-set system_ips
/ routing-policy policy underlay_import statement 10 action accept
/ routing-policy policy underlay_import default-action reject
/ routing-policy policy underlay_export statement 10 match prefix-set system_ips
/ routing-policy policy underlay_export statement 10 action accept
/ routing-policy policy underlay_export default-action reject

{{/* Underlay Config */}}
/ network-instance default protocols bgp router-id {{ .system_ip }}
/ network-instance default protocols bgp autonomous-system {{ .as }}
/ network-instance default protocols bgp ebgp-default-policy import-reject-all false
/ network-instance default protocols bgp ebgp-default-policy export-reject-all false
/ network-instance default protocols bgp ipv4-unicast multipath max-paths-level-1 64 max-paths-level-2 64
/ network-instance default protocols bgp group underlay timers connect-retry 1
/ network-instance default protocols bgp group underlay timers minimum-advertisement-interval 1
/ network-instance default protocols bgp group underlay ipv4-unicast admin-state enable
/ network-instance default protocols bgp group underlay import-policy underlay_import export-policy underlay_export

{{/* Configure underlay ebgp on links */}}
{{- range $name, $link := .clab_links -}}
  {{- if true }}
/ network-instance default protocols bgp neighbor {{ ip $link.clab_far.clab_link_ip }} peer-group underlay
/ network-instance default protocols bgp neighbor {{ ip $link.clab_far.clab_link_ip }} peer-as {{(index $.clab_nodes $link.clab_far.clab_node).as}}
  {{- end -}}
{{- end -}}

{{- if $.static_route_prefix }}
/ interface lo0 admin-state enable subinterface 0 ipv4 address {{ slice $.static_route_prefix 0 -3 }}/32
/ network-instance default interface lo0.0

/ network-instance default static-routes route {{ $.static_route_prefix }} next-hop-group blackhole
/ network-instance default next-hop-groups group blackhole admin-state enable blackhole
/ routing-policy prefix-set system_ips prefix {{ $.static_route_prefix }} mask-length-range exact
{{- end -}}

{{- if $.peer_external }}
/ routing-policy policy underlay_import statement 20 match prefix-set external_routes
/ routing-policy policy underlay_import statement 20 action accept bgp local-preference set 101
{{- end -}}

{{/* RR Config, unless disabled */}}
{{- if $.overlay_as }}
/ network-instance default protocols bgp group RR timers connect-retry 1
/ network-instance default protocols bgp group RR timers minimum-advertisement-interval 1
{{/* / network-instance default protocols bgp group RR evpn admin-state enable */}}
/ network-instance default protocols bgp group RR ipv4-unicast admin-state enable
/ network-instance default protocols bgp group RR transport local-address {{ .system_ip }}
# / network-instance default protocols bgp group RR peer-as {{ $.overlay_as }}
# / network-instance default protocols bgp group RR local-as {{ $.overlay_as }}

{{/* All nodes export external prefixes to RR, but next hop self depends */}}
/ routing-policy policy overlay_export default-action reject
/ routing-policy policy overlay_export statement 10 match prefix-set external_routes
/ routing-policy policy overlay_export statement 10 action accept

/ routing-policy policy overlay_import default-action accept
/ network-instance default protocols bgp group RR import-policy overlay_import export-policy overlay_export next-hop-self false

# / interface lo0 admin-state enable subinterface 0 ipv4 address {{ .anycast_ip }}/32
# / network-instance default interface lo0.0

{{- if not .cluster_id }}
{{/* Make AS path coming from RR as long as external routes */}}
/ routing-policy policy overlay_import default-action accept bgp as-path prepend repeat-n 2

{{/* Configure anycast loopback, not on RR? */}}
# / interface lo0 admin-state enable subinterface 0 ipv4 address {{ .anycast_ip }}/32
# / network-instance default interface lo0.0

{{- range $name, $node := $.clab_nodes }}
  {{- if .cluster_id }}
/ network-instance default protocols bgp neighbor {{ $node.system_ip }} peer-group RR peer-as {{ $node.as }}
  {{- end -}}
{{- end -}}
{{ else }}
{{/* Configure anycast loopback, only on RR? */}}
/ interface lo0 admin-state enable subinterface 0 ipv4 address {{ .anycast_ip }}/32
/ network-instance default interface lo0.0

{{/* Make routes sent by RR preferred over local loopbacks */}}
/ routing-policy policy overlay_export statement 10 action accept bgp local-preference set 101

/ network-instance default protocols bgp group RR route-reflector client true
/ network-instance default protocols bgp group RR route-reflector cluster-id {{ .cluster_id }}
/ network-instance default protocols bgp group RR import-policy overlay_export

{{/* eBGP here would require 21.11R1 for eBGP multihop, or direct links */}}
/ network-instance default protocols bgp dynamic-neighbors accept match 0.0.0.0/0 peer-group RR allowed-peer-as [ 65002..65006 ]
{{- end -}}

{{- range $name, $node := $.clab_nodes }}
  {{- if .static_route_prefix }}
/ routing-policy prefix-set external_routes prefix {{ .static_route_prefix }} mask-length-range exact
  {{- end -}}
{{- end -}}
{{- end -}}
